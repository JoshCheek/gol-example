#!/usr/bin/env ruby
require_relative '../lib/gol'

# gosper's glider gun
xy_pairs = [
  [ 1, 5], [ 2, 5], [ 1, 6], [ 2, 6],                                                                         # left_square
  [14, 3], [13, 3], [12, 4], [11, 5], [11, 6], [11, 7], [12, 8], [13, 9], [14, 9],                            # half_circle
  [16, 4], [17, 5], [15, 6], [17, 6], [18, 6], [17, 7], [16, 8],                                              # arrow
  [25, 1], [25, 2], [23, 2], [21, 3], [22, 3], [21, 4], [22, 4], [21, 5], [22, 5], [23, 6], [25, 6], [25, 7], # frog
  [35, 3], [36, 3], [35, 4], [36, 4],                                                                         # right_square
]

# escape codes for the console
require 'io/console'
topleft     = "\e[H"
hide_cursor = "\e[?25l"
show_cursor = "\e[?25h"

def self.rgb(n)
  n            = n%216 # ensure its within bounds
  r            =  1 + n / 25
  g            =  5 + n / 5 % 5
  b            = 25 + n % 5
  base_colours = 16
  base_colours + r*36 + g*6 + b
end

begin
  game = Gol.new Set.new xy_pairs # initialize in whatever way yours works
  print hide_cursor
  loop do
    height, width = $stdin.winsize
    print(topleft, game.to_s(width, height).lines.map
                       .with_index { |line, i| "\e[38;5;#{rgb i}m#{line.chomp}\e[39m" }
                       .join("\n"))
    game = game.tomorrow
    sleep 0.01
  end
ensure
  print show_cursor
end
